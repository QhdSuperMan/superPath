{
	// Place your EnterpriseMiddleBackstage workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $$1, $$2 for tab stops, $$0 for the final cursor position, and $${1:label}, $${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$$1');",
	// 		"$$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"add": {
		"prefix": "add",
		"body": [
			"<template>",
			"  <div class=\"apply-main\">",
			"    <div class=\"form-box\">",
			"      <div class=\"fragment-box\">",
			"        <div class=\"title-box\">",
			"          <div class=\"title-box-left\"></div>",
			"          <span>基本信息</span>",
			"        </div>",
			"        <div class=\"base-info-form\">",
			"          <custom-form",
			"            :pagination=\"false\"",
			"            align=\"left\"",
			"            :formItems=\"formItems\"",
			"            :formModelValue=\"formModel\"",
			"            :formCols=\"formCols\"",
			"            :isTableFixed=\"false\"",
			"            ref=\"customForm\"",
			"          >",
			"            <span slot=\"required-icon\"><required-icon></required-icon> </span>",
			"          </custom-form>",
			"        </div>",
			"      </div>",
			"",
			"      <div class=\"fragment-box\">",
			"        <div class=\"title-box\">",
			"          <div class=\"title-box-left\"></div>",
			"          <span>组件列表</span>",
			"        </div>",
			"        <div class=\"table-container\">",
			"          <custom-table :columns=\"columns\" :data-source=\"formModel.cmptList\">",
			"          </custom-table>",
			"        </div>",
			"      </div>",
			"",
			"      <div class=\"fragment-box footer\">",
			"        <div class=\"form-common-button-style\">",
			"          <button class=\"cancel\" @click=\"back\">取消</button>",
			"          <button class=\"submit\" @click=\"save(1)\">保存</button>",
			"          <!-- <button class=\"submit\" @click=\"add(2)\">提交申请</button> -->",
			"        </div>",
			"      </div>",
			"    </div>",
			"  </div>",
			"</template>",
			"",
			"<script>",
			"import RequiredIcon from \"@/components/Icon/RequiredIcon\";",
			"import CustomForm from \"@/components/CustomForm\";",
			"import CustomTable from \"@/components/CustomTable\";",
			"import { formModel, configMixins, tableRules } from './config/template-add.js'",
			"",
			"import customValidators from \"@/utils/custom-validators\";",
			"",
			"import { workTemplateAdd, workTemplateUpdate, getWorkTemplate } from '@/api/work-order/workOrder.js'",
			"",
			"export default {",
			"  mixins: [configMixins],",
			"  components: { RequiredIcon, CustomForm, CustomTable },",
			"",
			"  data() {",
			"    return {",
			"      formModel: Object.assign({}, formModel),",
			"      formCols: 2,",
			"      selectedRowKeys: [],",
			"      componentsType: [],",
			"      isAdd: true,",
			"    };",
			"  },",
			"  created() {",
			"    this.getTypes()",
			"  },",
			"  mounted() {",
			"    this.formModel.cmptList = []",
			"    if (this.$$route.query.id) {",
			"      this.isAdd = false",
			"      this.getDetails(this.$$route.query.id)",
			"    } ",
			"  },",
			"  methods: {",
			"    async getDetails(id) {",
			"      let { res } = await getWorkTemplate(id)",
			"      if (res.data.code === '200') {",
			"        this.formModel = res.data.data",
			"        console.log('this.formModel: ', this.formModel);",
			"      }",
			"    },",
			"    async save() {",
			"      console.log('this.formModel: ', this.formModel);",
			"",
			"      if (this.$$refs.customForm.validateForm()) {",
			"        // 校验表格",
			"        if (!customValidators.validateTable(tableRules, this.formModel.cmptList, this.columns)) return",
			"",
			"        let result = {}",
			"        if (this.isAdd) {",
			"          result = await workTemplateAdd(this.formModel)",
			"        } else {",
			"          result = await workTemplateUpdate(this.formModel)",
			"        }",
			"",
			"        if (result.res.data.code == '200') {",
			"          this.$$message.success('操作成功')",
			"          this.back()",
			"        }",
			"",
			"      }",
			"    },",
			"    back() {",
			"      this.$$router.push(\"./tempalte-list\");",
			"    }",
			"  },",
			"};",
			"</script>",
			"",
			"<style lang=\"scss\" scoped>",
			"@import \"@/base.scss\";",
			".apply-main {",
			"  width: 100%;",
			"  background-color: #f5f7fa;",
			"  margin: 0 auto;",
			"  padding: px2rem(20px) 0 px2rem(5px) 0;",
			"  .form-box {",
			"    .fragment-box {",
			"      background-color: #ffffff;",
			"      border: 1px solid;",
			"      border-color: #efefef;",
			"      border-radius: 4px;",
			"      margin-bottom: px2rem(20px);",
			"      .title-box {",
			"        .title-box-left {",
			"          width: 3px;",
			"          height: px2rem(20px);",
			"          background-color: #009999;",
			"          margin-right: px2rem(18px);",
			"        }",
			"        span {",
			"          font-family: Microsoft YaHei;",
			"          font-weight: 700;",
			"          color: #262626;",
			"          font-size: px2rem(18px);",
			"        }",
			"        height: px2rem(56px);",
			"        line-height: px2rem(40px);",
			"        display: flex;",
			"        align-items: center;",
			"        border-bottom: 1px solid #eeeeee;",
			"      }",
			"    }",
			"    .base-info-form {",
			"      padding: px2rem(10px) px2rem(15px);",
			"    }",
			"    .custom-form {",
			"      padding: px2rem(10px);",
			"    }",
			"  }",
			"}",
			"</style>",
			""
		],
		"description": "add"
	},
	"modal": {
		"prefix": "modal",
		"body": [
			"<!--",
			" * @Description: 处理工单",
			" * @Author: wuyurong 1065229722@qq.com",
			" * @Date: 2022-10-20 09:29:55",
			" * @LastEditors: wuyurong 1065229722@qq.com",
			" * @LastEditTime: 2022-11-03 10:18:51",
			"-->",
			"<template>",
			"  <a-modal",
			"    title=\"工单处理\"",
			"    :visible=\"visible\"",
			"    :confirm-loading=\"confirmLoading\"",
			"    @ok=\"ok\"",
			"    @cancel=\"cancel\"",
			"    width=\"860px\"",
			"  >",
			"    <custom-form",
			"      align=\"left\"",
			"      :formItems=\"formItems\"",
			"      :formModelValue=\"formModel\"",
			"      :formCols=\"formCols\"",
			"      :isTableFixed=\"false\"",
			"      ref=\"customForm\"",
			"    >",
			"      <span slot=\"required-icon\"><required-icon></required-icon></span>",
			"    </custom-form>",
			"  </a-modal>",
			"</template>",
			"",
			"<script>",
			"import CustomForm from \"@/components/CustomForm\";",
			"import RequiredIcon from \"@/components/Icon/RequiredIcon\";",
			"// import CommentsIcon from \"@/components/icon/RequiredIcon.vue\";",
			"import CustomButton from \"@/components/CustomButton\";",
			"import customValidators from \"@/utils/custom-validators\";",
			"",
			"import { dealWork } from '@/api/work-order/workOrder.js'",
			"",
			"",
			"export default {",
			"  data() {",
			"    return {",
			"      visible: false,",
			"      formCols: 2,",
			"      formModel: {",
			"        content: ''",
			"      },",
			"      confirmLoading: false,",
			"      formItems: [",
			"        {",
			"          name: \"处理意见\",",
			"          widgetType: \"textarea\",",
			"          bindKey: \"content\",",
			"          slots: { slotName: \"required-icon\" },",
			"          rules: [",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.specialValue",
			"            },",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.required",
			"            }",
			"          ],",
			"          colSpan: 2",
			"        }",
			"",
			"      ]",
			"    }",
			"  },",
			"  components: {",
			"    CustomForm,",
			"    CustomButton,",
			"    RequiredIcon",
			"  },",
			"  props: {",
			"    value: {",
			"      type: Boolean,",
			"      default: false",
			"    },",
			"    row: {",
			"      type: Object,",
			"      default: () => { }",
			"    }",
			"  },",
			"  watch: {",
			"    value: {",
			"      handler(newVal) {",
			"        if (newVal) {",
			"",
			"        }",
			"        this.visible = newVal",
			"      },",
			"      immediate: true",
			"    }",
			"  },",
			"  created() {",
			"  },",
			"  methods: {",
			"    cancel() {",
			"      this.$$emit('input', false)",
			"      this.$$emit('cancel', false)",
			"    },",
			"    ok() {",
			"      if (this.$$refs.customForm.validateForm()) {",
			"        let formValue = this.$$refs.customForm.getFormModel();",
			"        this.$$emit('ok')",
			"        this.dealOrder(formValue.content)",
			"      }",
			"    },",
			"    // 处理工单",
			"    async dealOrder(message) {",
			"      this.confirmLoading = true",
			"      const { res } = await dealWork({",
			"        operateRemark: message,",
			"        workId: this.row.workId",
			"      })",
			"      if (res.data.code == '200') {",
			"        this.$$message.success('处理成功');",
			"        this.$$emit('input', false)",
			"        this.$$emit('success')",
			"      }",
			"      this.confirmLoading = false",
			"    },",
			"  }",
			"}",
			"</script>",
			"",
			"<style lang=\"scss\" scoped>",
			"@import \"@/base.scss\";",
			"</style>"
		],
		"description": "modal"
	},
	"column": {
		"prefix": "column",
		"body": [
			"/*",
			" * @Description:",
			" * @Author: wuyurong 1065229722@qq.com",
			" * @Date: 2022-10-24 16:59:51",
			" * @LastEditors: wuyurong 1065229722@qq.com",
			" * @LastEditTime: 2022-11-02 09:06:15",
			" */",
			"import customValidators from \"@/utils/custom-validators\";",
			"",
			"// 表格校验规则",
			"export const tableRules = {",
			"  cmptType: [customValidators.required, customValidators.specialValue],",
			"  cmptDefNameCn: [customValidators.required, customValidators.specialValue],",
			"  cmptType: [customValidators.required, customValidators.specialValue],",
			"  metadataName: [customValidators.required, customValidators.specialValue]",
			"};",
			"",
			"// 启用状态",
			"export const enableFlag = [",
			"  {",
			"    itemCode: \"0\",",
			"    itemName: \"禁用\",",
			"  },",
			"  {",
			"    itemCode: \"1\",",
			"    itemName: \"启用\",",
			"  },",
			"];",
			"",
			"export const formModel = {",
			"  specTaskFlag: \"\", // 专项任务",
			"  workCode: \"\", // 工单编号",
			"  workTitle: \"\", // 工单名称",
			"  templateType: \"\", // 模版类型",
			"  workStatus: \"\", // 工单状态",
			"  templateName: \"\", // 模版名称",
			"  createStarTime: \"\", // 创建时间",
			"  createEndTime: \"\", // 结束时间",
			"};",
			"",
			"export const rowModel = {",
			"  specTaskFlag: \"\", // 专项任务",
			"  workCode: \"\", // 工单编号",
			"  workTitle: \"\", // 工单名称",
			"  templateType: \"\", // 模版类型",
			"  workStatus: \"\", // 工单状态",
			"  templateName: \"\", // 模版名称",
			"  createStarTime: \"\", // 创建时间",
			"  createEndTime: \"\", // 结束时间",
			"};",
			"",
			"export const configMixins = {",
			"  data() {",
			"    return {",
			"      formItems: [",
			"        {",
			"          name: \"工单名称\",",
			"          widgetType: \"input\",",
			"          bindKey: \"workTitle\",",
			"          colSpan: 3,",
			"          slots: { slotName: \"required-icon\" },",
			"          rules: [",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.specialValue",
			"            },",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.required",
			"            }",
			"          ]",
			"        },",
			"        {",
			"          name: \"工单类型\",",
			"          bindKey: \"workCategoryId\",",
			"          colSpan: 3,",
			"          widgetType: \"dictSelect\",",
			"          attrs: {",
			"            allKey: false,",
			"            // api: pageWorkCategory,",
			"            isScroll: true,",
			"            returnStr: \"data.records\",",
			"            config: { value: \"workCategoryId\", label: \"workCategoryName\" }",
			"          },",
			"          slots: { slotName: \"required-icon\" },",
			"          rules: [",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.specialValue",
			"            },",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.required",
			"            }",
			"          ]",
			"        },",
			"        {",
			"          name: \"期望完成时间\",",
			"          widgetType: \"date\",",
			"          bindKey: \"hopeCompeleTime\",",
			"          colSpan: 3,",
			"          slots: { slotName: \"required-icon\" },",
			"          rules: [",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.specialValue",
			"            },",
			"            {",
			"              key: customValidators.CUSTOM_VALIDATOR,",
			"              value: customValidators.required",
			"            }",
			"          ]",
			"        },",
			"        {",
			"          name: \"工单描述\",",
			"          widgetType: \"textarea\",",
			"          bindKey: \"workDescr\",",
			"          colSpan: 6",
			"        },",
			"        {",
			"          name: \"附件\",",
			"          widgetType: \"fileList\",",
			"          bindKey: \"listDtos\",",
			"          rules: [],",
			"          colSpan: 6",
			"        }",
			"      ],",
			"      columns: [",
			"        {",
			"          title: \"序号\",",
			"          dataIndex: \"index\",",
			"          key: \"index\",",
			"          align: \"center\",",
			"          width: \"70px\",",
			"          customRender: (text, row, index) => {",
			"            return {",
			"              children: index + 1,",
			"              attrs: {",
			"                colSpan: 1,",
			"                rowSpan: 1,",
			"              },",
			"            };",
			"          },",
			"        },",
			"        {",
			"          title: \"工单编号\",",
			"          dataIndex: \"workCode\",",
			"          key: \"workCode\",",
			"          align: \"center\",",
			"          width: \"100px\",",
			"          ellipsis: true,",
			"        },",
			"        {",
			"          title: \"工单类型\",",
			"          dataIndex: \"workCategoryId\",",
			"          key: \"workCategoryId\",",
			"          align: \"center\",",
			"          width: \"100px\",",
			"          ellipsis: true,",
			"          customRender: function (value) {",
			"            let obj = this.workCategoryList.find(",
			"              (val) => val.workCategoryId === value",
			"            );",
			"            return {",
			"              children: obj && obj.workCategoryName,",
			"              attrs: {",
			"                colSpan: 1,",
			"                rowSpan: 1,",
			"              },",
			"            };",
			"          }.bind(this),",
			"        },",
			"        {",
			"          title: \"创建时间\",",
			"          dataIndex: \"createTime\",",
			"          key: \"createTime\",",
			"          align: \"center\",",
			"          width: \"120px\",",
			"          ellipsis: true,",
			"        },",
			"        {",
			"          title: \"操作\",",
			"          dataIndex: \"operate\",",
			"          key: \"operate\",",
			"          align: \"center\",",
			"          width: \"120px\",",
			"          noShowSlot: true,",
			"          customRender: (text, row, index) => {",
			"            return {",
			"              children: [",
			"                <a-button",
			"                  type=\"link\"",
			"                  class=\"table-list-button-orange\"",
			"                  disabled={row.workState == \"1002\" ? false : \"disabled\"}",
			"                  onClick={() => this.press(row)}",
			"                >",
			"                  催办",
			"                </a-button>,",
			"              ],",
			"              attrs: {",
			"                colSpan: 1,",
			"                rowSpan: 1,",
			"              },",
			"            };",
			"          },",
			"        },",
			"      ],",
			"    };",
			"  },",
			"};",
			""
		],
		"description": "column"
	},
	"list": {
		"prefix": "list",
		"body": [
			"<!--",
			" * @Description: 工单模板管理",
			" * @Author:  wuyurong 1065229722@qq.com",
			" * @Date: 2022-10-19 15:25:59",
			" * @LastEditors: wuyurong 1065229722@qq.com",
			" * @LastEditTime: 2022-11-17 15:16:16",
			"-->",
			"<template>",
			"  <div class=\"demand-list\">",
			"    <div class=\"demand-title\">工单模版管理</div>",
			"    <div class=\"header\">",
			"      <a-form-model",
			"        :model=\"form\"",
			"        :label-col=\"labelCol\"",
			"        :wrapper-col=\"wrapperCol\"",
			"        ref=\"ruleForm\"",
			"      >",
			"        <a-row>",
			"          <a-col :span=\"6\">",
			"            <a-form-model-item label=\"模版编号\" prop=\"templateCode\">",
			"              <a-input",
			"                allowClear",
			"                v-model=\"form.templateCode\"",
			"                placeholder=\"请输入模版编号\"",
			"                @keyup.enter=\"search\"",
			"              />",
			"            </a-form-model-item>",
			"          </a-col>",
			"        </a-row>",
			"        <a-row>",
			"          <a-col :span=\"6\">",
			"            <a-form-model-item label=\"启停状态\" prop=\"enableFlag\">",
			"              <dict-select",
			"                v-model=\"form.enableFlag\"",
			"                code=\"workTmpTypeEnable\"",
			"              />",
			"            </a-form-model-item>",
			"          </a-col>",
			"          <a-col :span=\"6\">",
			"            <a-form-model-item label=\"模板创建时间\">",
			"              <a-range-picker",
			"                v-model=\"createTime\"",
			"                valueFormat=\"YYYY-MM-DD\"",
			"                @change=\"timeChange\"",
			"              >",
			"                <a-icon slot=\"suffixIcon\" type=\"calendar\" />",
			"              </a-range-picker>",
			"            </a-form-model-item>",
			"          </a-col>",
			"",
			"          <a-col :span=\"6\">",
			"            <a-row class=\"btn_box\">",
			"              <a-col :span=\"3\" class=\"search\" @click=\"search\">",
			"                <a-icon type=\"search\" /> 查询</a-col",
			"              >",
			"              <a-col :span=\"3\" @click=\"reset\"",
			"                ><a-icon type=\"sync\" /> 重置</a-col",
			"              >",
			"            </a-row>",
			"          </a-col>",
			"        </a-row>",
			"      </a-form-model>",
			"    </div>",
			"    <div class=\"btn-group\">",
			"      <custom-button",
			"        type=\"img\"",
			"        :url=\"addIconUrl\"",
			"        bgColor=\"#359A9A\"",
			"        text=\"模板创建\"",
			"        @click=\"editTemplate()\"",
			"      ></custom-button>",
			"      <!-- <custom-button",
			"        type=\"img\"",
			"        :url=\"importIconUrl\"",
			"        bgColor=\"#e2f4f4\"",
			"        textColor=\"#009999\"",
			"        text=\"导入\"",
			"        @click=\"isShowCustomImport = true\"",
			"      ></custom-button>",
			"      <custom-button",
			"        type=\"img\"",
			"        :url=\"exportIconUrl\"",
			"        bgColor=\"#e2f4f4\"",
			"        textColor=\"#009999\"",
			"        text=\"导出\"",
			"        @click=\"exportRows\"",
			"      ></custom-button> -->",
			"    </div>",
			"    <div class=\"table-container\">",
			"      <custom-table",
			"        :selectedRowKeys=\"selectedRowKeys\"",
			"        :pagination=\"pagination\"",
			"        rowKey=\"templateId\"",
			"        :columns=\"columns\"",
			"        :data-source=\"dataSource\"",
			"      >",
			"      </custom-table>",
			"    </div>",
			"",
			"    <custom-import",
			"      v-model=\"isShowCustomImport\"",
			"      name=\"工单模板\"",
			"      :downLoadUrl=\"workOrderApi.TEMPLATEDOWNLOADWORKTEMPLATE\"",
			"      :importUrl=\"workOrderApi.TEMPLATEDOWNLOADWORKTEMPLATE\"",
			"      @success=\"search\"",
			"    />",
			"  </div>",
			"</template>",
			"",
			"<script>",
			"import DictSelect from \"@/components/DictSelect\";",
			"import CustomImport from \"@/components/CustomImport\";",
			"import CustomTable from \"@/components/CustomTable\";",
			"import CustomButton from \"@/components/CustomButton\";",
			"import importIconUrl from \"@/assets/images/dr__icon.png\";",
			"import exportIconUrl from \"@/assets/images/dc_icon.png\";",
			"import addIconUrl from \"@/assets/images/work-order/create.png\";",
			"",
			"import { searchParams, configMixins } from './config/template-list'",
			"import { downloadFile } from '@/utils/download-util.js'",
			"import workOrderApi from '@/api/work-order/workOrderApi.js'",
			"",
			"import { workTemplateEnable, workTemplateDelete, workTemplateDisable, getWorkTemplatePage } from '@/api/work-order/workOrder.js'",
			"",
			"",
			"import {",
			"  getServiceInitBsmMiddlePlatformListApi,",
			"} from \"@/api/demandAcceptanceApi\";",
			"",
			"export default {",
			"  mixins: [configMixins],",
			"  data() {",
			"    return {",
			"      workOrderApi,",
			"      createTime: [],",
			"      labelCol: { span: 7 },",
			"      wrapperCol: { span: 16 },",
			"      addIconUrl,",
			"      importIconUrl,",
			"      exportIconUrl,",
			"      isShowCustomImport: false,",
			"      pagination: {",
			"        current: 1,",
			"        pageSize: 10,",
			"        total: 0,",
			"        onChange: this.pageChange,",
			"      },",
			"      form: Object.assign({}, searchParams),",
			"      dataSource: [],",
			"      selectedRowKeys: []",
			"    };",
			"  },",
			"  components: {",
			"    DictSelect,",
			"    CustomTable,",
			"    CustomButton,",
			"    CustomImport",
			"  },",
			"  created() {",
			"    this.getList()",
			"  },",
			"  methods: {",
			"    switchTemplate(row) {",
			"      let type = true",
			"      let messgae = \"启用\"",
			"      if (row.enableFlag == '1') {",
			"        type = false",
			"        messgae = \"禁用\"",
			"      }",
			"      let that = this",
			"      this.$$confirm({",
			"        title: `确认$${messgae}此模板`,",
			"        onOk() {",
			"          let action = workTemplateDisable",
			"          if (type) {",
			"            action = workTemplateEnable",
			"          }",
			"          action(row.templateId).then(({ res }) => {",
			"            if (res.data.code == '200') {",
			"",
			"              that.$$message.success(`$${messgae}成功`);",
			"              row.enableFlag = row.enableFlag == '1' ? '0' : '1'",
			"            }",
			"          })",
			"        }",
			"      })",
			"    },",
			"",
			"    delTemplate(row) {",
			"      let that = this",
			"      this.$$confirm({",
			"        title: '确认删除此模板',",
			"        onOk() {",
			"          workTemplateDelete(row.templateId).then(({ res }) => {",
			"            if (res.data.code == '200') {",
			"              that.$$message.success('删除成功');",
			"              that.getList()",
			"            }",
			"          })",
			"        }",
			"      })",
			"    },",
			"    seeTemplate(row) {",
			"      this.$$router.push({",
			"        path: \"./tempalte-see\",",
			"        query: {",
			"          id: row.templateId",
			"        },",
			"      });",
			"    },",
			"",
			"    editTemplate(row = {}) {",
			"      this.$$router.push({",
			"        path: \"./tempalte-add\",",
			"        query: {",
			"          id: row.templateId",
			"        },",
			"      });",
			"    },",
			"    // 导出",
			"    exportRows() {",
			"      let params = {",
			"        pageSize: this.pagination.pageSize,",
			"        pageIndex: this.pagination.current,",
			"        filter: { ...this.form }",
			"      }",
			"      downloadFile(workOrderApi.EXPORTWORKTEMPLATE, '工单模板导出', params)",
			"    },",
			"    reset() {",
			"      this.form = Object.assign({}, searchParams)",
			"      this.createTime = []",
			"      this.timeChange()",
			"      this.getList(0)",
			"    },",
			"    // 时间改变",
			"    timeChange() {",
			"      if (Array.isArray(this.createTime)) {",
			"        this.form.createStarTime = this.createTime[0]",
			"        this.form.createEndTime = this.createTime[1]",
			"      } else {",
			"        this.form.createStarTime = ''",
			"        this.form.createEndTime = ''",
			"      }",
			"    },",
			"    // 获取列表",
			"    async getList(index) {",
			"      if (index !== undefined) this.pagination.current = index",
			"",
			"      let params = {",
			"        pageSize: this.pagination.pageSize,",
			"        pageIndex: this.pagination.current,",
			"        filter: { ...this.form }",
			"      }",
			"",
			"      this.selectedRowKeys = []",
			"",
			"      const { res } = await getWorkTemplatePage(params)",
			"      if (res.data.code == 200) {",
			"        this.dataSource = res.data.data.records",
			"        this.pagination.total = res.data.data.total - 0",
			"      }",
			"",
			"    },",
			"    pageChange(index) {",
			"      this.getList(index)",
			"    },",
			"    search() {",
			"      this.getList(0)",
			"    }",
			"  },",
			"};",
			"</script>",
			"",
			"<style lang=\"scss\" scoped>",
			"@import \"@/base.scss\";",
			".demand-list {",
			"  width: 100%;",
			"  height: 100%;",
			"  padding: px2rem(16px) px2rem(20px);",
			"  background-color: #fff;",
			"  .demand-title {",
			"    padding-bottom: px2rem(16px);",
			"    font-family: Microsoft YaHei;",
			"    font-weight: 700;",
			"    color: #313131;",
			"    font-size: px2rem(18px);",
			"    text-align: left;",
			"    position: relative;",
			"    &::after {",
			"      content: \"\";",
			"      position: absolute;",
			"      left: px2rem(-19px);",
			"      top: 4px;",
			"      width: px2rem(3px);",
			"      height: px2rem(20px);",
			"      background-color: #009999;",
			"    }",
			"  }",
			"  .header {",
			"    background-color: #f8f9fb;",
			"    border: 1px solid;",
			"    border-color: #f2f4f7;",
			"    border-radius: 4px;",
			"    margin-bottom: px2rem(22px);",
			"    position: relative;",
			"    padding: px2rem(26px) px2rem(40px) 0;",
			"    /deep/ .ant-form label {",
			"      font-size: px2rem(14px);",
			"      color: rgba(#313131, 0.6);",
			"    }",
			"    .btn_box {",
			"      position: absolute;",
			"      right: 0;",
			"      bottom: -40px;",
			"      & > div {",
			"        cursor: pointer;",
			"        width: px2rem(100px);",
			"        background-color: rgba(0, 153, 153, 1);",
			"        border: 1px solid;",
			"        border-color: #d3e7e9;",
			"        border-radius: 4px;",
			"        line-height: px2rem(40px);",
			"        text-align: center;",
			"        margin-right: px2rem(15px);",
			"        font-family: Microsoft YaHei;",
			"        color: #ffffff;",
			"        font-size: px2rem(16px);",
			"        &:last-of-type {",
			"          color: #878889;",
			"          background-color: #ffffff;",
			"          border: 1px solid;",
			"          border-color: #ececec;",
			"          border-radius: 4px;",
			"        }",
			"      }",
			"      .search:hover {",
			"        background-color: rgba(0, 140, 140, 1);",
			"      }",
			"    }",
			"  }",
			"  .btn-group {",
			"    text-align: left;",
			"    margin-bottom: px2rem(30px);",
			"    .custom-button {",
			"      margin-right: 0.2rem;",
			"      border: 1px solid #b7e1e1;",
			"",
			"      &:not(:first-child) {",
			"        /deep/ .btn-text {",
			"          color: #009999 !important;",
			"        }",
			"      }",
			"    }",
			"  }",
			"  .table-container {",
			"    background-color: #fff;",
			"  }",
			"  ::-webkit-scrollbar {",
			"    width: 4px;",
			"    height: 5px;",
			"  }",
			"  ::-webkit-scrollbar-thumb {",
			"    border-radius: 10px;",
			"    box-shadow: inset 0 0 5px rgba(97, 184, 179, 1);",
			"    background-color: #78b4b4;",
			"  }",
			"  ::-webkit-scrollbar-track {",
			"    box-shadow: inset 0 0 5px rgba(87, 175, 187, 0.01);",
			"    border-radius: 10px;",
			"    background: #ededed;",
			"  }",
			"}",
			"",
			"/deep/ .ant-table-column-title {",
			"  font-family: Microsoft YaHei;",
			"  color: #262626;",
			"  font-size: px2rem(16px);",
			"}",
			"/deep/ .ant-pagination-options-quick-jumper {",
			"  cursor: pointer;",
			"}",
			"</style>",
			""
		],
		"description": ""
	}
}